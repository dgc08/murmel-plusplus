;!MURBIN
;std.io

include std.math

$std.endl: ; endl "\n"
    10
    0

defmacro putchar char:
    cpy 5 char
    syscall
macro_end

putln:
    call puts
    putmacro putchar std.endl

defmacro println str:
    cpy r0 str
    call putln
macro_end

scope
puts:
    movz 4
    l.start:
        jz *r0 l.finish
        cpy 5 *r0
        inc r0
        syscall
        jmp l.start
    l.finish:
        ret

scope
l.no_limit:
    0
l.strp:
    0
getline:
    ; char* l.strp location
    ; u r1 limit
    ;
    ; If limit is 0, no limit
    mov l.strp r0

    jz r1 l.set_no_limit
       movz l.no_limit
       dec r1
       jmp l.start
    l.set_no_limit:
        inc l.no_limit

    l.start:
        mov 4 #1
        syscall
        jnz 5 l.end

        cpy s1 6
        cpy s2 std.endl
        cmp s1 s2
        jz s4 l.end


        mov *l.strp 6
        inc l.strp
        jnz l.no_limit l.start
        dec r1
        jz r1 l.end
        jmp l.start
    l.end:
        movz *l.strp
        mov r0 l.strp
        ret

scope
l.num_offset:
    #"0"
l.num_base:
    10

l.len:
    0
printnum:
    ; r0 = int to print
    movz 4,6 ; make syscall ready
    l.start:
        cpy r1 l.num_base
        call math.div
        push r1 ;remainder
        inc l.len
        jnz r0 l.start
    l.print:
        cpy r1 l.num_offset
        pop 5 ; pop char onto 5
        add 5 r1
        syscall
        dec l.len
        jnz l.len l.print
    ret
